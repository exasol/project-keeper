# Generated by Project Keeper
# https://github.com/exasol/project-keeper/blob/main/project-keeper/src/main/resources/templates/.github/workflows/ci-build-db-version-matrix.yml
name: CI Build
on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  matrix-build:
    runs-on: $ciBuildRunnerOS
    defaults:
      run:
        shell: "bash"
    permissions:
      contents: read
      checks: write # Allow scacap/action-surefire-report
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.exasol_db_version }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        exasol_db_version: [$matrixExasolDbVersions]
    env:
      DEFAULT_EXASOL_DB_VERSION: $defaultExasolDbVersion
    steps:
      - name: Free Disk Space
        if: ${{ $freeDiskSpace }}
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDKs
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: |
            11
            17
          cache: "maven"
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Enable testcontainer reuse
        run: echo 'testcontainers.reuse.enable=true' > "$HOME/.testcontainers.properties"
      - name: Run tests and build with Maven
        id: pk-verify
        run: |
          mvn --batch-mode clean verify \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              -DtrimStackTrace=false \
              -Dcom.exasol.dockerdb.image=${{ matrix.exasol_db_version }}
        env:
          # Set additional environment variable as in scala projects the scalatest plugin does not forward
          # the system property -Dcom.exasol.dockerdb.image to the test's implementation.
          EXASOL_DB_VERSION: ${{ matrix.exasol_db_version }}
      - name: Publish Test Report for Exasol ${{ matrix.exasol_db_version }}
        uses: scacap/action-surefire-report@v1
        if: ${{ always() && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Sonar analysis
        if: ${{ env.SONAR_TOKEN != null && matrix.exasol_db_version == env.DEFAULT_EXASOL_DB_VERSION }}
        run: |
          mvn --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              -DtrimStackTrace=false \
              -Dsonar.token=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Verify Release Artifacts
        run: |
          print_message() {
              local -r message=$1
              echo "$message"
              echo "$message" >> "$GITHUB_STEP_SUMMARY"
          }

          print_message "### Release Artifacts"

          IFS=$'\n' artifacts_array=($ARTIFACTS)
          missing_files=()
          for file in "${artifacts_array[@]}";
          do  
              echo "Checking if file $file exists..."
              if ! [[ -f "$file" ]]; then
                  print_message "* ⚠️ \`$file\` does not exist ⚠️"
                  echo "Content of directory $(dirname "$file"):"
                  ls "$(dirname "$file")"
                  missing_files+=("$file")
              else
                  print_message "* \`$file\` ✅" 
              fi
          done
          print_message ""
          number_of_missing_files=${#missing_files[@]}
          if [[ $number_of_missing_files -gt 0 ]]; then
              print_message "⚠️ $number_of_missing_files release artifact(s) missing ⚠️"
              exit 1
          fi
        env:
          ARTIFACTS: ${{ steps.pk-verify.outputs.release-artifacts }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-exasol-${{ matrix.exasol_db_version }}
          path: ${{ steps.pk-verify.outputs.release-artifacts }}
          retention-days: 5

  build:
    needs: matrix-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash"
    permissions:
      contents: read
      issues: read # Required for PK verify-release
    outputs:
      release-required: ${{ steps.check-release.outputs.release-required }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDKs
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: |
            11
            17
          cache: "maven"
      - name: Check if release is needed
        id: check-release
        run: |
          if mvn --batch-mode com.exasol:project-keeper-maven-plugin:verify-release --projects .; then
              echo "### ✅ Release preconditions met, start release" >> "$GITHUB_STEP_SUMMARY"
              echo "release-required=true" >> "$GITHUB_OUTPUT"
          else
              echo "### 🛑 Not all release preconditions met, skipping release" >> "$GITHUB_STEP_SUMMARY"
              echo "See log output for details." >> "$GITHUB_STEP_SUMMARY"
              echo "release-required=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # [impl->dsn~release-workflow.ci-build-starts-release~2]
  start_release:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' && needs.build.outputs.release-required == 'true' }}
    concurrency:
      cancel-in-progress: false
      group: "release"
    secrets: inherit
    permissions:
      contents: write
      actions: read
      issues: read
    uses: ./.github/workflows/release.yml
    with:
      started-from-ci: true
