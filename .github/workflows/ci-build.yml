name: CI Build
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash"
    permissions:
      contents: read
      checks: write # Allow scacap/action-surefire-report
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDKs
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: |
            11
            17
          cache: "maven"
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache-dependency-path: .github/workflows/ci-build.yml
      - name: Install Go tools
        run: go install github.com/google/go-licenses@v1.6.0
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Run tests and build with Maven
        run: |
          mvn --batch-mode clean verify install \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              -DtrimStackTrace=false -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }} # Required for integration tests of GitHub access
      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
        if: ${{ always() && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Sonar analysis
        if: ${{ env.SONAR_TOKEN != null }}
        run: |
          mvn --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              -DtrimStackTrace=false \
              -Dsonar.organization=exasol \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.token=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Run project-keeper itself
        id: pk-verify
        run: mvn --batch-mode com.exasol:project-keeper-maven-plugin:verify --projects .

      - name: Verify Release Artifacts
        run: |
          print_message() {
              local -r message=$1
              echo "$message"
              echo "$message" >> "$GITHUB_STEP_SUMMARY"
          }

          print_message "# Release Artifacts" >> "$GITHUB_STEP_SUMMARY"

          IFS=$'\n' artifacts_array=($ARTIFACTS)
          missing_files=()
          for file in "${artifacts_array[@]}";
          do  
              echo "Checking if file $file exists..."
              if ! [[ -f "$file" ]]; then
                  print_message "* ⚠️ Release artifact $file does not exist ⚠️"
                  echo "Content of $(dirname "$file"):"
                  ls "$(dirname "$file")"
                  missing_files+=("$file")
              else
                  print_message "* Release artifact $file exists" 
              fi
          done
          print_message ""
          number_of_missing_files=${#missing_files[@]}
          if [[ $number_of_missing_files -gt 0 ]]; then
              print_message "⚠️ $number_of_missing_files release artifact(s) missing ⚠️"
              exit 1
          else
              print_message "All ${#artifacts_array[@]} artifact(s) present ✅"
          fi

        env:
          ARTIFACTS: ${{ steps.pk-verify.outputs.release-artifacts }}

  start_release:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    concurrency:
      cancel-in-progress: false
      group: "release"
    secrets: inherit
    permissions:
      contents: write
      actions: read
    uses: ./.github/workflows/release.yml
    with:
      started-from-ci: true
